package com.dao;

import com.entity.MedicalRecord;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class MedicalRecordDAO {
    private Connection conn;

    public MedicalRecordDAO(Connection conn) {
        this.conn = conn;
    }

    public boolean saveMedicalRecord(MedicalRecord record) {
        try {
            String sql = "INSERT INTO medical_records (user_id, appointment_id, file_name, file_path) VALUES (?, ?, ?, ?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, record.getUserId());
            ps.setInt(2, record.getAppointmentId());
            ps.setString(3, record.getFileName());
            ps.setString(4, record.getFilePath());
            return ps.executeUpdate() == 1;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }

    public List<MedicalRecord> getRecordsByUser(int userId) {
        List<MedicalRecord> list = new ArrayList<>();
        try {
            String sql = "SELECT * FROM medical_records WHERE user_id = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, userId);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                MedicalRecord r = new MedicalRecord();
                r.setId(rs.getInt("id"));
                r.setUserId(rs.getInt("user_id"));
                r.setAppointmentId(rs.getInt("appointment_id"));
                r.setFileName(rs.getString("file_name"));
                r.setFilePath(rs.getString("file_path"));
                r.setUploadDate(rs.getString("upload_date"));
                list.add(r);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return list;
    }
    public List<MedicalRecord> getAllRecordsByUser(int userId) {
        List<MedicalRecord> list = new ArrayList<>();
        try {
            String sql = "SELECT * FROM medical_records WHERE user_id=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, userId);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                MedicalRecord m = new MedicalRecord();
                m.setId(rs.getInt("id"));
                m.setUserId(rs.getInt("user_id"));
                m.setAppointmentId(rs.getInt("appointment_id"));
                m.setFileName(rs.getString("file_name"));
                m.setFilePath(rs.getString("file_path"));
                list.add(m);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return list;
    }

}
